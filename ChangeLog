2007-11-15  Guillaume Lazzara  <z@lrde.epita.fr>

	Fix exceptions catching in tests.
	When an exception was catched, the number of tests to run in the test program
	was incremented. Thus, if exceptions were continuously thrown, the tests didn't finish.
	Debug messages raised with the exceptions were also not reported.
	* src/tests/include/tests/automata/algos/graphs/sub_automaton_test.hh,
	* src/tests/include/tests/automata/algos/label_aware_graphs/concat_test.hh,
	* src/tests/include/tests/automata/algos/label_aware_graphs/eps_removal_test.hh,
	* src/tests/include/tests/automata/algos/label_aware_graphs/glushkov_test.hh,
	* src/tests/include/tests/automata/algos/label_aware_graphs/in_concat_test.hh,
	* src/tests/include/tests/automata/algos/label_aware_graphs/sum_test.hh,
	* src/tests/include/tests/automata/algos/labeled_graphs/thompson_test.hh: here.

2007-11-11  Guillaume Lazzara  <z@lrde.epita.fr>

	Split graph structures related files.
	Each implementation usually needs its own specialization of objects provided
	by Vaucanson such as Support. Thus, I moved all the specialized code into
	directories dedicated for each implementation.

	* include/generate_headers.sh: Remove a useless variable.
	* include/vaucanson/automata/concept/automata_ops.hxx:
	Use the proper op_* functions.
	* include/vaucanson/automata/implementation/boostg/boost_functors.hxx: New.
	* include/vaucanson/automata/implementation/boostg/edge_value.hxx: New.
	* include/vaucanson/automata/implementation/boostg/initial_value.hxx: New.
	* include/vaucanson/automata/implementation/boostg/vgraph_container.hxx: New.
	* include/vaucanson/automata/implementation/boostg: New.
	* include/vaucanson/automata/implementation/boostg_graph_impl.hh,
	* include/vaucanson/automata/implementation/boostg_graph_impl.hxx: Clean up.
	* include/vaucanson/automata/implementation/legacy: New.
	* include/vaucanson/automata/implementation/light/light_support.hh: New.
	* include/vaucanson/automata/implementation/light/light_support.hxx: New.
	* include/vaucanson/automata/implementation/light: New.
	* include/vaucanson/automata/implementation/light_graph_impl.hh,
	* include/vaucanson/automata/implementation/light_graph_impl.hxx: Clean up.
	* include/vaucanson/misc/hash.hh: add a missing include.
	* include/vaucanson/misc/support.hh,
	* include/vaucanson/misc/support.hxx: remove specialized code.

2007-10-29  Guillaume Lazzara  <z@lrde.epita.fr>

	Add graph implementation templates
	To help the user developping new graph implementations,
	the vcsn_add_impl.sh script now provides templates with all
	the basics which must be declared/implemented.

	* data/Makefile.am: Add the template files to the tarball.
	* data/template_graph_impl.hh: New.
	* data/template_graph_impl.hxx: New.
	* include/vaucanson/automata/implementation/boostg_graph_impl.hh:
	cleanup comments.
	* tools/vcsn_add_impl.sh: add new options to use the templates.

2007-10-28  Guillaume Lazzara  <z@lrde.epita.fr>

	Add a missing operator for AutomataBase.
	I needed to reimplement the op_convert operator and use it
	in op_assign. Having these two operators allows structure
	convertion on assignement and copy.
	* include/vaucanson/automata/concept/automata_ops.hh,
	* include/vaucanson/automata/concept/automata_ops.hxx: here.

2007-10-28  Guillaume Lazzara  <z@lrde.epita.fr>

	Fix various header includes 
	* include/generate_headers.sh: Improve the way the namespace aliases are made.
	* include/vaucanson/automata/generic_contexts/z_max_plus_automaton_structures.hh:
	Add a missing include.
	* include/vaucanson/xml/tools.hh: Use structure headers instead.

2007-10-28  Guillaume Lazzara  <z@lrde.epita.fr>

	Improve generated context headers
	The default implementation is now set up automagically when
	an implementation is used alone by including its headers.
	In case several context headers are included, the first
	implementation included is the default one.
	* include/generate_headers.sh: here.

2007-10-28  Guillaume Lazzara  <z@lrde.epita.fr>

	Fix a test.
	A templated function was specialized with a wrong type.
	* src/tests/include/tests/context_headers/automata/global_consistency_test.hh: .

2007-10-22  Guillaume Lazzara  <z@lrde.epita.fr>

	Add a better usage output for vsn_add_impl.sh
	* vcsn_add_impl.sh: here.

2007-10-22  Guillaume Lazzara  <z@lrde.epita.fr>

	Fix compilation issues 
	Since krat.hxx can be included without any automata structure
	headers included, we need to provide default values to specific
	macros.
	Also, when I moved the op_assign function, I removed the default
	implementation which was used for the series. So I restored
	the default implementation.
	The op_assign function in automata_ops.hh was not specialized 
	for AutomataBase.
  
	* include/vaucanson/algebra/implementation/series/krat.hxx:
	Set default values to VCSN_GRAPH_IMPL_INCLUDE_PATH and 
	VCSN_CONTEXT_INCLUDE_PATH macros.
	* include/vaucanson/automata/concept/automata_ops.hh: Update
	op_assign function declaration.
	* include/vaucanson/design_pattern/default_ops.hh,
	* include/vaucanson/design_pattern/default_ops.hxx: restore
	an op_assign function previously moved to automata_ops_.hh.

2007-10-19  Guillaume Lazzara  <z@lrde.epita.fr>

	Provide namespace aliases for external graph structures . 
	In case the developer would like to use only his own structure,
	we want to provide the namespace alias if he sets that
	structure as the default one.
	* include/generate_headers.sh,
	* tools/vcsn_add_impl.sh: here.

2007-10-19  Guillaume Lazzara  <z@lrde.epita.fr>

	New script to help the developers to add a new graph structure.
	Thanks to this script, developers can develop their own structures in
	their projects. Then they can run the script over their graph
	implementation headers and it will generate all the context headers
	they would need to use their structure with Vaucanson.
	
	Example:
	========
	
	Project directory:
	
	    * include/
	      * mine_graph_impl.hh
	      * mine_graph_impl.hxx

	in the include directory, run:

	  vcsn_add_impl.sh mine_graph_impl.hh --vcsn-include-dir=path/to/vcsn/include
	
	Then in your project directory you have now:
	    * include/
	      * mine
		* boolean_automaton.hh
		* boolean_transducer.hh
		* fmp_transducer.hh
		* ...
	      * mine_graph_impl.hh
	      * mine_graph_impl.hxx
	
	You just need to include the proper header to use your graph structure
	with Vaucanson.
	
	* tools/vcsn_add_impl.sh: New.
	* tools: New.

2007-10-19  Guillaume Lazzara  <z@lrde.epita.fr>

	Introduce two news macros. 
	I needed to introduce VCSN_GRAPH_IMPL_INCLUDE_PATH and
	VCSN_CONTEXT_INCLUDE_PATH in order to make easier the possibility
	of adding new structures by the user.
	* include/generate_headers.sh:
	Update the generated headers.
	* include/vaucanson/misc/usual_macros.hh:
	Update macros used to include files.

2007-10-19  Guillaume Lazzara  <z@lrde.epita.fr>

 	Remove multiple declarations of op_assign operator.
	* include/vaucanson/automata/concept/automata_ops.hxx: cleanup.
	* include/vaucanson/design_pattern/default_ops.hh,
	* include/vaucanson/design_pattern/default_ops.hxx:
	remove multiple declarations.

2007-10-18  Guillaume Lazzara  <z@lrde.epita.fr>

	update svn:ignore property 

2007-10-18  Guillaume Lazzara  <z@lrde.epita.fr>

	Enable generic Graph structure conversion.
	By default, the source Graph was just copied to the destination one.
	Since the structures can be different, I needed to implement a generic
	Graph copy using the op_* operators.
	Be careful, currently this copy doesn't preserve the Geometry object.
	* include/vaucanson/automata/concept/automata_ops.hh: .
	* include/vaucanson/automata/concept/automata_ops.hxx: .
	* include/vaucanson/design_pattern/default_ops.hh: .
	* inclu de/vaucanson/design_pattern/default_ops.hxx: .

2007-10-18  Guillaume Lazzara  <z@lrde.epita.fr>

	Various small fixes
	* Makefile.am: Fix a compilation dependency issue.
	* include/vaucanson/automata/implementation/boostg_graph_impl.hh,
	* include/vaucanson/automata/implementation/boostg_graph_impl.hxx,
	* include/vaucanson/automata/implementation/light_graph_impl.hh: Fix variable names.

2007-10-18  Guillaume Lazzara  <z@lrde.epita.fr>

	Fix MacOs compatibility for the header generation script
	The script failed with errors.
	gfind must be used on MacOs.
	Double quotes had to be replaced by simple quotes.
	* include/generate_headers.sh: here. 

2007-10-13  Guillaume Lazzara  <z@lrde.epita.fr>

	Fix compilation issues
	The make check didn't compile properly and useless tests were generated.

	* include/vaucanson/algebra/implementation/series/krat.hxx,
	* include/vaucanson/automata/implementation/generalized.hh: Fix includes.
	* include/vaucanson/misc/sparse_interval.hh: Add a const_iterator.
	* src/tests/sanity/generate_files.sh: ignore the generic_context directory
	for the test generation.

2007-10-12  Guillaume Lazzara  <z@lrde.epita.fr>

	Remove useless namespace
	hstate_t type is now graph structure dependent and is not part
	of the vcsn namespace anymore, at least not directly.

	BMI branch now compiles, w00t! \o/

	* data/automata/b/ladybird.cc: fixed there.

2007-10-12  Guillaume Lazzara  <z@lrde.epita.fr>

	Remove useless inline keyword
	In a previous patch, I forgot to remove this keyword after having moved
	the function implementations in a .hxx file.

	* include/vaucanson/automata/concept/smart_label.hxx: fixed there.

2007-10-12  Guillaume Lazzara  <z@lrde.epita.fr>

	Fix generic context headers includes
	There were some problems with function redefinitions/missing functions
	while compiling with different kind of automata.
	CPP guards have been removed in the generic contexts and are now
	correctly instanciated according to the graph implementation.
	A new macro also prevents the VCSN_GRAPH_IMPL from being undefined while
	including several graph implementation headers.

	* include/Makefile.am: Update path to header files.
	* include/generate_headers.sh: Fix the generated headers.
	* include/vaucanson/automata/generic_contexts/boolean_automaton.hh,
	* include/vaucanson/automata/generic_contexts/boolean_automaton_structures.hh,
	* include/vaucanson/automata/generic_contexts/boolean_transducer.hh,
	* include/vaucanson/automata/generic_contexts/boolean_transducer_structures.hh,
	* include/vaucanson/automata/generic_contexts/fmp_transducer.hh,
	* include/vaucanson/automata/generic_contexts/fmp_transducer_structures.hh,
	* include/vaucanson/automata/generic_contexts/r_automaton.hh,
	* include/vaucanson/automata/generic_contexts/r_automaton_structures.hh,
	* include/vaucanson/automata/generic_contexts/z_automaton.hh,
	* include/vaucanson/automata/generic_contexts/z_automaton_structures.hh,
	* include/vaucanson/automata/generic_contexts/z_fmp_transducer.hh,
	* include/vaucanson/automata/generic_contexts/z_fmp_transducer_structures.hh,
	* include/vaucanson/automata/generic_contexts/z_max_plus_automaton.hh,
	* include/vaucanson/automata/generic_contexts/z_max_plus_automaton_structures.hh,
	* include/vaucanson/automata/generic_contexts/z_min_plus_automaton.hh,
	* include/vaucanson/automata/generic_contexts/z_min_plus_automaton_structures.hh,
	* include/vaucanson/automata/generic_contexts/z_transducer.hh,
	* include/vaucanson/automata/generic_contexts/z_transducer_structures.hh:
	CPP guards removed.

2007-10-12  Guillaume Lazzara  <z@lrde.epita.fr>

	Move portions of code in VCSN_GRAPH_IMPL namespace
	This code depends on the graph structure thus it had to be part of the
	VCSN_GRAPH_IMPL namespace.
	Some declarations also needed to have the VCSN_GRAPH_IMPL namespace
	specified.

	* include/vaucanson/algebra/implementation/series/krat.hxx: .
	* include/vaucanson/automata/implementation/generalized.hh: .
	* include/vaucanson/automata/implementation/legacy_graph_impl.hh: .
	* include/vaucanson/automata/implementation/legacy_graph_impl.hxx: .
	* include/vaucanson/contexts/fmp_transducer_maker.thh: .
	* include/vaucanson/contexts/fmp_transducer_maker.thxx: .
	* include/vaucanson/contexts/generic_automaton_impl.thh: .
	* include/vaucanson/contexts/transducer_maker.thh: .
	* include/vaucanson/contexts/transducer_maker.thxx: .

2007-10-12  Guillaume Lazzara  <z@lrde.epita.fr>

	Introduce a third graph structure
	Currently this is exactly the same structure as the legacy one.
	However, it will become a distinct structure in a near future.
	It is usefull for my current tests.

	* include/vaucanson/automata/implementation/light_graph_impl.hh: New.
	* include/vaucanson/automata/implementation/light_graph_impl.hxx: New.

2007-10-12  Guillaume Lazzara  <z@lrde.epita.fr>

	Rename boost namespace to boostg
	Since the boost library uses boost as namespace name, using also
	this namespace for the graph structure in Vaucanson introduced strange
	conflits.

	* include/vaucanson/automata/implementation/boost_graph_impl.hh: Remove.
	* include/vaucanson/automata/implementation/boost_graph_impl.hxx: Remove.
	* include/vaucanson/automata/implementation/boostg_graph_impl.hh: New.
	* include/vaucanson/automata/implementation/boostg_graph_impl.hxx: New.

2007-10-12  Guillaume Lazzara  <z@lrde.epita.fr>

	Introduce new macros to include files
	Since we need to include headers according to the graph
	implementation used, we needed new macros to choose the
	correct path where to find these headers.

	* include/vaucanson/misc/usual_macros.hh: defined there.

2007-10-12  Guillaume Lazzara  <z@lrde.epita.fr>

	Introduce VCSN_DEFAULT_GRAPH_IMPL macro
	Since we would like to have a basic implementation converted into
	others automatically in the algorithms, we needed a macro to define
	it and let the user change it as needed.
	The default value is set during the configure and written in the
	pconf.hh file.
	The default graph implementation is also used in libvcsn.

	* configure.ac: Set the default value of this macro.
	* include/vaucanson/config/pconf.hh.in: Ask configure to write it there.
	* lib/generate_libvcsn.rb: Use the default implementation.

2007-10-06  Guillaume Lazzara  <z@lrde.epita.fr>

	Change the target directory for the generated context headers.
	Move the generated context headers to vaucanson/contexts/$impl/
	* generate_headers.sh: .

2007-10-06  Guillaume Lazzara  <z@lrde.epita.fr>

	Introduce new context headers for each graph implementation.
	The context headers will be generated for each kind of graph
	implementation. A new script is now called during the bootstrap in
	order to do it.
	I also moved the previous headers in a new directory since they are
	actually included in the new generated headers.

	* bootstrap.sh: call generate_headers.sh.
	* include/Makefile.am: include a mk file.
	* include/generate_headers.sh: New.
	* include/vaucanson/automata/generic_contexts/boolean_automaton.hh: New.
	* include/vaucanson/automata/generic_contexts/boolean_automaton_structures.hh: New.
	* include/vaucanson/automata/generic_contexts/boolean_transducer.hh: New.
	* include/vaucanson/automata/generic_contexts/boolean_transducer_structures.hh: New.
	* include/vaucanson/automata/generic_contexts/fmp_transducer.hh: New.
	* include/vaucanson/automata/generic_contexts/fmp_transducer_structures.hh: New.
	* include/vaucanson/automata/generic_contexts/r_automaton.hh: New.
	* include/vaucanson/automata/generic_contexts/r_automaton_structures.hh: New.
	* include/vaucanson/automata/generic_contexts/z_automaton.hh: New.
	* include/vaucanson/automata/generic_contexts/z_automaton_structures.hh: New.
	* include/vaucanson/automata/generic_contexts/z_fmp_transducer.hh: New.
	* include/vaucanson/automata/generic_contexts/z_fmp_transducer_structures.hh: New.
	* include/vaucanson/automata/generic_contexts/z_max_plus_automaton.hh: New.
	* include/vaucanson/automata/generic_contexts/z_max_plus_automaton_structures.hh: New.
	* include/vaucanson/automata/generic_contexts/z_min_plus_automaton.hh: New.
	* include/vaucanson/automata/generic_contexts/z_min_plus_automaton_structures.hh: New.
	* include/vaucanson/automata/generic_contexts/z_transducer.hh: New.
	* include/vaucanson/automata/generic_contexts/z_transducer_structures.hh: New.
	* include/vaucanson/automata/generic_contexts: New.
	* include/vaucanson/boolean_automaton.hh: Remove.
	* include/vaucanson/boolean_automaton_structures.hh: Remove.
	* include/vaucanson/boolean_transducer.hh: Remove.
	* include/vaucanson/boolean_transducer_structures.hh: Remove.
	* include/vaucanson/contexts/automaton.thh: .
	* include/vaucanson/contexts/automaton_functions.thh: .
	* include/vaucanson/contexts/automaton_maker.thh: .
	* include/vaucanson/contexts/automaton_maker.thxx: .
	* include/vaucanson/contexts/boolean_semiring.thh: .
	* include/vaucanson/contexts/char_letter.thh: .
	* include/vaucanson/contexts/dynamic_alphabet.thh: .
	* include/vaucanson/contexts/free_monoid.thh: .
	* include/vaucanson/contexts/free_monoid_product.thh: .
	* include/vaucanson/contexts/generic_series.thh: .
	* include/vaucanson/contexts/polynom_series.thh: .
	* include/vaucanson/contexts/r_semiring.thh: .
	* include/vaucanson/contexts/ratseries_semiring.thh: .
	* include/vaucanson/contexts/transducer.thh: .
	* include/vaucanson/contexts/z_max_plus_semiring.thh: .
	* include/vaucanson/contexts/z_min_plus_semiring.thh: .
	* include/vaucanson/contexts/z_semiring.thh: .
	* include/vaucanson/fmp_transducer.hh: Remove.
	* include/vaucanson/fmp_transducer_structures.hh: Remove.
	* include/vaucanson/r_automaton.hh: Remove.
	* include/vaucanson/r_automaton_structures.hh: Remove.
	* include/vaucanson/z_automaton.hh: Remove.
	* include/vaucanson/z_automaton_structures.hh: Remove.
	* include/vaucanson/z_fmp_transducer.hh: Remove.
	* include/vaucanson/z_fmp_transducer_structures.hh: Remove.
	* include/vaucanson/z_max_plus_automaton.hh: Remove.
	* include/vaucanson/z_max_plus_automaton_structures.hh: Remove.
	* include/vaucanson/z_min_plus_automaton.hh: Remove.
	* include/vaucanson/z_min_plus_automaton_structures.hh: Remove.
	* include/vaucanson/z_transducer.hh: Remove.
	* include/vaucanson/z_transducer_structures.hh: Remove.

2007-10-06  Guillaume Lazzara  <z@lrde.epita.fr>

	Introduce VCSN_GRAPH_IMPL macro.
	This new macro introduces the possibility of using different graph
	implementations.
	A new macro has also been defined to include graph implementation
	headers according to the current value of VCSN_GRAPH_IMPL.
	This patch also introduce a new dependency : Boost preprocessor.
	* include/vaucanson/algebra/implementation/series/krat.hxx: .
	* include/vaucanson/automata/implementation/generalized.hh: .
	* include/vaucanson/contexts/generic_automaton_impl.thh: .
	* include/vaucanson/misc/usual_macros.hh: .

2007-10-06  Guillaume Lazzara  <z@lrde.epita.fr>

	Fix various compilation issues
	A hash function was declared in a .hxx file even though
	it was not templated.
	The makefile associated to the eps_removal bench was not generated.
	* include/vaucanson/misc/hash.hh,
	* include/vaucanson/misc/hash.hxx: make a hash function inline.
	* src/benchs/eps_removal/Makefile.am,
	* src/benchs/eps_removal/eps_removal-bench.cc,
	* src/benchs/generate_benchs.sh:
	 fix the generation of the related Makefile.

2007-10-06  Guillaume Lazzara  <z@lrde.epita.fr>

	Rename graph implementation files and fix compilation issues.
	The renaming will help soon when we will want to use several
	implementations.
	Many compilation issues in graph.{hh,hxx} are also fixed.
	* include/vaucanson/automata/implementation/boost_graph.hh,
	* include/vaucanson/automata/implementation/boost_graph.hxx,
	* include/vaucanson/automata/implementation/boost_graph_impl.hh,
	* include/vaucanson/automata/implementation/boost_graph_impl.hxx: Renaming.
	* include/vaucanson/automata/implementation/graph.hh,
	* include/vaucanson/automata/implementation/graph.hxx,
	* include/vaucanson/automata/implementation/legacy_graph_impl.hh,
	* include/vaucanson/automata/implementation/legacy_graph_impl.hxx: Renaming and compilation issues fixing.

2007-05-15  Guillaume Lazzara  <z@lrde.epita.fr>

	Fix BoostGraph
	* include/vaucanson/automata/implementation/boost_graph.hh: .
	* include/vaucanson/automata/implementation/boost_graph.hxx: .

	It's working! (at least for Boolean automata)

2007-05-13  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Add operator= for BoostGraph.
	* boost_graph.hxx: .

2007-05-13  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Add copy constructor.
	* ../../automata/concept/smart_label.hh,
	* ../../automata/concept/smart_label.hxx: use boost::shared_ptr to hold label
	* ../../automata/implementation/boost_graph.hh,
	* ../../automata/implementation/boost_graph.hxx:
	Add copy constructor and shared label between copies of automata.

2007-05-13  Guillaume Lazzara  <z@lrde.epita.fr>

	Add Support specialization for BoostGraph's states_data_t
	* include/vaucanson/automata/concept/automata_ops.hxx,
	* include/vaucanson/automata/implementation/boost_graph.hh,
	* include/vaucanson/automata/implementation/boost_graph.hxx:
	  Introduce states_data_t type.
	* include/vaucanson/misc/counter_support.hh,
	* include/vaucanson/misc/counter_support.hxx: Remove.
	* include/vaucanson/misc/support.hh,
	* include/vaucanson/misc/support.hxx: .
	  Add Support specialization for BoostGraph's states_data_t.
	* src/tests/include/tests/automata/implementation_check/add_transition_test.hh:
	  Fix the test.

2007-05-12  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	New state handling. 
	* ../../include/vaucanson/automata/implementation/boost_graph.hh: .
	* ../../include/vaucanson/automata/implementation/boost_graph.hxx: .
	* ../../include/vaucanson/misc/hash.hh: .
	* ../../include/vaucanson/misc/hash.hxx: .

2007-05-12  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Fix two tests.
	* ../../src/tests/include/tests/automata/implementation_check/add_state_test.hh,
	* ../../src/tests/include/tests/automata/implementation_check/add_transition_test.hh: .

	Clear temporary structures between tests.

2007-05-12  Type Your Name Here  <your.mail.here@FIXME.com>

	Many fixes
	* ../../include/vaucanson/algorithms/image.hxx: .
	* ../../include/vaucanson/automata/concept/automata_base.hh: .
	* ../../include/vaucanson/automata/concept/handlers.hh: .
	* ../../include/vaucanson/automata/concept/handlers.hxx: .
	* ../../include/vaucanson/automata/implementation/boost_graph.hh: .
	* ../../include/vaucanson/automata/implementation/boost_graph.hxx: .
	* ../../include/vaucanson/automata/implementation/graph.hh: .
	* ../../include/vaucanson/automata/implementation/graph.hxx: .
	* ../../include/vaucanson/misc/support.hh: .
	* ../../src/tests/include/tests/context_headers/automata/global_consistency_test.hh: .

	Working graph structure. Edges and states deletion is unsafe. hlabel_t and 
	htransition_t are invalidated upon deletion.

2007-05-11  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Fix del_edge.
	* include/vaucanson/automata/implementation/boost_graph.hxx: .

2007-05-11  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Add missing type to automaton_traits.
	* automata/concept/automata_base.hh: .
	* automata/implementation/boost_graph.hh: .

2007-05-11  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Include SmartLabelContainer in BoostGraph.
	* automata/concept/smart_label.hh: .
	* automata/concept/smart_label.hxx: .
	* automata/implementation/boost_graph.hxx: .

2007-05-11  Guillaume Lazzara  <z@lrde.epita.fr>

	Boolean automata's make-check compiles
	* include/vaucanson/automata/implementation/generalized.hh: .
	* include/vaucanson/automata/implementation/geometry.hh: .
	* src/tests/include/tests/automata/algos/graphs/sub_automaton_test.hh: .
	* src/tests/include/tests/automata/algos/letter_combination_labeled_graphs/product_regression_test.hh: .
	* src/tests/include/tests/automata/implementation_check/rdelta_test.hh: .

2007-05-10  Guillaume Lazzara  <z@lrde.epita.fr>

	Fix make check issues
	* include/vaucanson/algebra/implementation/series/rat/hash_visitor.hxx: .
	* include/vaucanson/algorithms/accessible.hh: .
	* include/vaucanson/algorithms/cut_up.hxx: .
	* include/vaucanson/automata/concept/history.hh: .
	* include/vaucanson/automata/concept/history.hxx: .
	* include/vaucanson/automata/concept/kinds.hh: .
	* include/vaucanson/automata/concept/kinds.hxx: .
	* include/vaucanson/automata/concept/translate.hxx: .
	* include/vaucanson/automata/implementation/boost_graph.hh: .
	* include/vaucanson/automata/implementation/boost_graph.hxx: .
	* include/vaucanson/automata/implementation/generalized.hh: .
	* include/vaucanson/tools/automaton_tools.hh: .
	* include/vaucanson/tools/gen_random.hh: .
	* src/tests/include/tests/automata/algos/graphs/sub_automaton_test.hh: .
	* src/tests/include/tests/automata/algos/label_aware_graphs/cut_up_test.hh: .
	* src/tests/include/tests/automata/algos/letter_combination_labeled_graphs/product_regression_test.hh: .
	* src/tests/include/tests/automata/implementation_check/add_state_test.hh: .
	* src/tests/include/tests/automata/implementation_check/add_transition_test.hh: .
	* src/tests/include/tests/automata/implementation_check/rdelta_test.hh: .

2007-05-10  Guillaume Lazzara  <z@lrde.epita.fr>

	Add a missing traits for the Counter Support Iterator
	* include/vaucanson/misc/counter_support.hh: .
	* include/vaucanson/misc/counter_support.hxx: .

2007-05-09  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Add delta functions.
	* boost_graph.hxx: Add delta functions.

2007-05-09  Guillaume Lazzara  <z@lrde.epita.fr>

	Add new Graph method implementations.
	* automata/implementation/boost_graph.hh: .
	* automata/implementation/boost_graph.hxx: .
	* misc/hash.hxx: .
	* misc/support.hh: .

2007-05-08  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Update automaton_traits
	* ../concept/automata_base.hh: .
	* ../implementation/boost_graph.hh: .
	* ../implementation/graph.hh: .
	* ../implementation/transpose_view.hh: .

2007-05-08  Guillaume Lazzara  <z@lrde.epita.fr>

	Add iterator types
	* ../../include/vaucanson/automata/implementation/boost_graph.hh: .

2007-05-08  Guillaume Lazzara  <z@lrde.epita.fr>

	Add some method implementations for Boost Graph
	* include/vaucanson/automata/implementation/boost_graph.hh,
	* include/vaucanson/automata/implementation/boost_graph.hxx: .

	New method implementations.

2007-05-08  Guillaume Lazzara  <z@lrde.epita.fr>

	Require is_initial and is_final to be implemented in the Graph structure.
	* include/vaucanson/automata/concept/automata_ops.hh: .
	* include/vaucanson/automata/concept/automata_ops.hxx: .
	* include/vaucanson/automata/concept/boost_automata_ops.hxx: Remove.

	op_is_initial and op_is_final doesn't use get_initial and get_final
	anymore. With this patch we force the Graph to have an implementation
	for is_initial and is_final.

2007-05-07  Guillaume Lazzara  <z@lrde.epita.fr>

	Add SmartLabel implementation
	* include/vaucanson/automata/concept/smart_label.hh,
	* include/vaucanson/automata/concept/smart_label.hxx:

	Add SmartLabel implementation.
	Add missing inlines.
	Add missing const.

2007-05-07  Guillaume Lazzara  <z@lrde.epita.fr>

	hstate_t and htransition_t scope reduction complete.
	* include/vaucanson/algorithms/determinize.hh: .
	* include/vaucanson/algorithms/determinize.hxx: .
	* include/vaucanson/algorithms/domain.hxx: .
	* include/vaucanson/algorithms/eps_removal.hxx: .
	* include/vaucanson/algorithms/evaluation.hh: .
	* include/vaucanson/algorithms/evaluation.hxx: .
	* include/vaucanson/algorithms/extension.hxx: .
	* include/vaucanson/algorithms/fmp_to_realtime.hxx: .
	* include/vaucanson/algorithms/image.hh: .
	* include/vaucanson/algorithms/image.hxx: .
	* include/vaucanson/algorithms/internal/outsplitting.hh: .
	* include/vaucanson/algorithms/internal/outsplitting.hxx: .
	* include/vaucanson/algorithms/internal/skeleton.hh: .
	* include/vaucanson/algorithms/is_ambiguous.hxx: .
	* include/vaucanson/algorithms/minimization_hopcroft.hxx: .
	* include/vaucanson/algorithms/minimization_moore.hxx: .
	* include/vaucanson/algorithms/normalized_composition.hxx: .
	* include/vaucanson/algorithms/product.hh: .
	* include/vaucanson/algorithms/projection.hh: .
	* include/vaucanson/algorithms/projection.hxx: .
	* include/vaucanson/algorithms/realtime.hxx: .
	* include/vaucanson/algorithms/realtime_to_fmp.hxx: .
	* include/vaucanson/algorithms/sub_normalize.hxx: .
	* include/vaucanson/algorithms/trim.hh: .
	* include/vaucanson/algorithms/trim.hxx: .
	* include/vaucanson/automata/concept/handlers.hh: .
	* include/vaucanson/misc/counter_support.hh: .
	* include/vaucanson/misc/counter_support.hxx: .
	* include/vaucanson/misc/usual_macros.hh: .
	* include/vaucanson/tools/dot_format.hxx: .
	* include/vaucanson/tools/io.hh: .
	* include/vaucanson/tools/io.hxx: .
	* include/vaucanson/xml/xml_chooser.hh: .
	* include/vaucanson/xml/xml_converter.hh: .

	Libvcsn and Taf-Kit compile :)
	Now it's time to write method implementations for the Graph.

2007-05-07  Guillaume Lazzara  <z@lrde.epita.fr>

	Make Geometry Templated
	* include/vaucanson/algorithms/product.hxx,
	* include/vaucanson/automata/concept/automata_base.hh,
	* include/vaucanson/automata/implementation/boost_graph.hh,
	* include/vaucanson/automata/implementation/boost_graph.hxx,
	* include/vaucanson/automata/implementation/geometry.hh,
	* include/vaucanson/automata/implementation/geometry.hxx,
	* include/vaucanson/automata/implementation/transpose_view.hh,
	* include/vaucanson/contexts/generic_automaton_impl.thh,
	* include/vaucanson/xml/node.hh,
	* include/vaucanson/xml/node.hxx:

	Geometry is now templated by hstate_t and the coordinates container.
	It is dependant on the graph structure.
	The Geometry template parameter for Graph is replaced by the
	coordinates container type.
	The user can't change the Geometry object anymore. One can only change
	the coordinates type.

2007-05-07  Guillaume Lazzara  <z@lrde.epita.fr>

	Add new hash functions
	* include/vaucanson/algebra/implementation/series/rat/hash_visitor.hh,
	* include/vaucanson/algebra/implementation/series/rat/hash_visitor.hxx:
	  New. This visitor computes a hash value for rational expressions.
	* include/vaucanson/misc/hash.hh,
	* include/vaucanson/misc/hash.hxx: Add new hash functions.

2007-05-07  Guillaume Lazzara  <z@lrde.epita.fr>

	Fix libvcsn script
	* lib/generate_libvcsn.rb: Take into account the modification made on
	  hstate_t.

2007-05-05  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Various fix.
	* algorithms/aut_to_exp.hh: .
	* algorithms/aut_to_exp.hxx: .
	* algorithms/internal/build_pattern.hxx: .
	* algorithms/thompson.hxx: .
	* automata/concept/automata_base.hh: .
	* automata/concept/copy.hxx: .
	* automata/concept/handlers.hh: .
	* automata/concept/handlers.hxx: .
	* automata/implementation/boost_graph.hh: .
	* automata/implementation/boost_graph.hxx: .
	* automata/implementation/geometry.hh: .
	* automata/implementation/transpose_view.hh: .
	* misc/counter_support.hh: .
	* misc/counter_support.hxx: .
	* misc/usual_macros.hh: .

	Fix handler type definition.
	Pursuing the hstate_t and htransition_t scope reduction.
	Fix constness issues with the handlers.
	Fix CounterSupport.

2007-05-05  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Various fix.
	* include/vaucanson/algorithms/accessible.hh,
	* include/vaucanson/algorithms/accessible.hxx,
	* include/vaucanson/algorithms/internal/has_neighbour.hh,
	* include/vaucanson/algorithms/internal/has_neighbour.hxx,
	* include/vaucanson/algorithms/standard.hxx,
	* include/vaucanson/algorithms/standard_of.hxx,
	* include/vaucanson/algorithms/sub_automaton.hxx,
	* include/vaucanson/algorithms/sum.hxx,
	* include/vaucanson/automata/concept/automata_base.hh,
	* include/vaucanson/automata/concept/automata_base.hxx,
	* include/vaucanson/automata/concept/automata_ops.hh,
	* include/vaucanson/automata/concept/boost_automata_ops.hxx,
	* include/vaucanson/automata/concept/handlers.hh,
	* include/vaucanson/automata/concept/smart_label.hh,
	* include/vaucanson/automata/concept/smart_label.hxx,
	* include/vaucanson/automata/concept/transducer_base.hh,
	* include/vaucanson/automata/concept/transducer_base.hxx,
	* include/vaucanson/automata/concept/transducer_ops.hh,
	* include/vaucanson/automata/concept/transducer_ops.hxx,
	* include/vaucanson/automata/implementation/automaton_view.hh,
	* include/vaucanson/automata/implementation/automaton_view.hxx,
	* include/vaucanson/automata/implementation/boost_graph.hh,
	* include/vaucanson/automata/implementation/boost_graph.hxx,
	* include/vaucanson/automata/implementation/kind_adapter.hh,
	* include/vaucanson/automata/implementation/transpose_view.hh,
	* include/vaucanson/automata/implementation/transpose_view.hxx,
	* include/vaucanson/misc/usual_macros.hh:
	  Reduce the scope of hstate_t and htransition_t.
	  This is necessary to have both implemention simultaneously.

	* include/vaucanson/misc/hash.hh: New,
	* include/vaucanson/misc/hash.hxx: New,
	  Add functor to hash the handlers stored in a boost::multi_index.

	* include/vaucanson/misc/hash_label.hh: Remove.
	* include/vaucanson/misc/hash_label.hxx: Remove.

2007-05-04  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Various fix.
	* include/vaucanson/automata/concept/handlers.hh: Add a parent to EdgeValue.
	* include/vaucanson/automata/implementation/boost_graph.hh,
	* include/vaucanson/automata/implementation/boost_graph.hxx:
	  Many fixes to add hlabel_t to EdgeValue,
	  Add SmartLabelContainer.

2007-05-04  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Add a set of functor to hash the label.
	* include/vaucanson/misc/hash_label.hh: New.
	* include/vaucanson/misc/hash_label.hxx: New.

2007-05-04  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Add SmartLabelContainer.
	* include/vaucanson/automata/concept/smart_label.hh: New.
	* include/vaucanson/automata/concept/smart_label.hxx: New.

2007-05-04  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Add missing constructor
	* include/vaucanson/misc/counter_support.hh,
	* include/vaucanson/misc/counter_support.hxx: add missing constructor.

2007-04-27  Guillaume Lazzara  <z@lrde.epita.fr>

	Few method implementations
	* automata/implementation/boost_graph.hh: .
	* automata/implementation/boost_graph.hxx: .
	* tools/io.hh,
	* tools/io.hxx: Fix a renaming issue due to the empty_ macro.

2007-04-25  Guillaume Lazzara  <z@lrde.epita.fr>

	Implemention of Support
	* support.hh,
	* support.hxx: Implementation of Support for BMI.

2007-04-25  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Various fix in boost implementation.
	* automata/concept/automata_base.hh: Remove unused typedef.
	* automata/concept/handlers.hh,
	* automata/concept/handlers.hxx: Enhance the genericity of handler.
	* automata/implementation/boost_graph.hh,
	* automata/implementation/boost_graph.hxx: Various implementation fix.
	* automata/implementation/graph.hh,
	* automata/implementation/transpose_view.hh: Remove unused typedef.
	* misc/counter_support.hh,
	* misc/counter_support.hxx: Fix multiple definitions.
	* misc/support.hh: Renaming structures.

2007-04-20  Guillaume Lazzara  <z@lrde.epita.fr>

	Add support for {initial, final}_support_t
	* include/vaucanson/automata/implementation/boost_graph.hh: .
	* include/vaucanson/misc/support.hh: .

2007-04-16  Guillaume Lazzara  <z@lrde.epita.fr>

	Fix compilation issues and inline functions in CounterSupport
	* include/vaucanson/automata/implementation/boost_graph.hh: .
	* include/vaucanson/automata/implementation/boost_graph.hxx: .
	* include/vaucanson/contexts/generic_automaton_impl.thh: .
	* include/vaucanson/misc/counter_support.hxx: .

2007-04-16  Guillaume Lazzara  <z@lrde.epita.fr>

	Many changes
	* configure.ac: .
	* include/vaucanson/algebra/implementation/series/krat.hxx: .
	* include/vaucanson/algorithms/eps_removal.hxx: .
	* include/vaucanson/algorithms/evaluation.hxx: .
	* include/vaucanson/algorithms/extension.hxx: .
	* include/vaucanson/algorithms/image.hxx: .
	* include/vaucanson/algorithms/invert.hxx: .
	* include/vaucanson/algorithms/minimization_hopcroft.hxx: .
	* include/vaucanson/algorithms/realtime_composition.hxx: .
	* include/vaucanson/automata/concept/automata_base.hxx: .
	* include/vaucanson/automata/concept/automata_ops.hh: .
	* include/vaucanson/automata/concept/automata_ops.hxx: .
	* include/vaucanson/automata/concept/boost_automata_ops.hxx: New.
	* include/vaucanson/automata/implementation/boost_graph.hh: .
	* include/vaucanson/automata/implementation/generalized.hh: .
	* include/vaucanson/contexts/generic_automaton_impl.thh: .
	* include/vaucanson/misc/counter_support.hh: New.
	* include/vaucanson/misc/counter_support.hxx: New.
	* include/vaucanson/misc/usual_macros.hh: .
	* include/vaucanson/tools/io.hh: .
	* include/vaucanson/tools/io.hxx: .

2007-04-13  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Add boost_graph.h{h,xx}
	Added a draft of BoostGraph, the BMI based graph implementation.
	* boost_graph.hh: New.
	* boost_graph.hxx: New.
	* graph.hh: .

2007-04-06  Jimmy Ma  <jimmy.ma@lrde.epita.fr>

	Creating a new branch `bmi'.
	Make a new implementation based on the library Boost Multi Index.

	* bmi/ChangeLog: New.
	* bmi/Makefile.am: New.
	* bmi/bootstrap.sh: New.
	* bmi/build-aux: New.
	* bmi/configure.ac: New.
	* bmi/data: New.
	* bmi/include: New.
	* bmi/lib: New.
	* bmi/src: New.
	* bmi/taf-kit: New.
	* bmi/vaucanson.mk: New.
	* bmi: New.

