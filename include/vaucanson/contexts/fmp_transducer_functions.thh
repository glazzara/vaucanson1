//								-*- c++ -*-
// fmp_transducer_functions.thh: this file is part of the Vaucanson project.
//
// Vaucanson, a generic library for finite state machines.
// Copyright (C) 2005 The Vaucanson Group.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// The Vaucanson Group represents the following contributors:
//    * Jacques Sakarovitch <sakarovitch@enst.fr>
//    * Sylvain Lombardy <lombardy@liafa.jussieu.fr>
//    * Thomas Claveirole <thomas.claveirole@lrde.epita.fr>
//    * Loic Fosse <loic.fosse@lrde.epita.fr>
//    * Thanh-Hoc Nguyen <nguyen@enst.fr>
//    * Raphael Poss <raphael.poss@lrde.epita.fr>
//    * Yann Regis-Gianas <yann.regis-gianas@lrde.epita.fr>
//    * Maxime Rey <maxime.rey@lrde.epita.fr>
//    * Sarah O'Connor <sarah.o-connor@lrde.epita.fr>
//    * Louis-Noel Pouchet <louis-noel.pouchet@lrde.epita.fr>
//

# include <vaucanson/algebra/concept/alphabets_base.hh>
# include <vaucanson/tools/usual_macros.hh>

namespace vcsn
{

  namespace VCSN_CONTEXT_NAMESPACE
  {

    template <class T1, class T2>
    automaton_t new_automaton(const T1& first_alphabet,
			      const T2& second_alphabet);

    template <class FirstInputIterator, class SecondInputIterator>
    automaton_t new_automaton(const FirstInputIterator first_begin,
			      const FirstInputIterator first_end,
			      const SecondInputIterator second_begin,
			      const SecondInputIterator second_end);

    template <class T1, class T2>
    monoid_elt_t make_couple(const T1& first_alphabet,
			     const T2& second_alphabet,
			     const std::string& first_exp = "",
			     const std::string& second_exp = "");

    template <class FirstIterator, class SecondIterator>
    monoid_elt_t make_couple(const FirstIterator first_begin,
			     const FirstIterator first_end,
			     const SecondIterator second_begin,
			     const SecondIterator second_end,
			     const std::string& first_exp,
			     const std::string& second_exp);

    template <typename TransStruct,
	      typename TransImpl,
	      typename ArgStruct,
	      typename ArgImpl>
    AUTOMATON_CONTEXT::series_set_elt_t
    evaluation(const Element<TransStruct, TransImpl>& t,
	       const Element<ArgStruct, ArgImpl>& input);

  } // End of namespace VCSN_CONTEXT_NAMESPACE.

} // End of namespace vcsn.


# ifndef VCSN_USE_INTERFACE_ONLY
#  include <vaucanson/contexts/fmp_transducer_functions.thxx>
# endif // ! VCSN_USE_INTERFACE_ONLY
