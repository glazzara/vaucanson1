//								-*- c++ -*-
// transducer_functions.thh: this file is part of the Vaucanson project.
//
// Vaucanson, a generic library for finite state machines.
// Copyright (C) 2004, 2005 The Vaucanson Group.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// The Vaucanson Group represents the following contributors:
//    * Jacques Sakarovitch <sakarovitch@enst.fr>
//    * Sylvain Lombardy <lombardy@liafa.jussieu.fr>
//    * Thomas Claveirole <thomas.claveirole@lrde.epita.fr>
//    * Loic Fosse <loic.fosse@lrde.epita.fr>
//    * Thanh-Hoc Nguyen <nguyen@enst.fr>
//    * Raphael Poss <raphael.poss@lrde.epita.fr>
//    * Yann Regis-Gianas <yann.regis-gianas@lrde.epita.fr>
//    * Maxime Rey <maxime.rey@lrde.epita.fr>
//    * Sarah O'Connor <sarah.o-connor@lrde.epita.fr>
//    * Louis-Noel Pouchet <louis-noel.pouchet@lrde.epita.fr>
//

# ifndef VCSN_WITHOUT_ALGORITHM_INCLUDES
#  include <vaucanson/algorithms/closure.hh>
#  include <vaucanson/algorithms/realtime.hh>
#  include <vaucanson/algorithms/realtime_composition.hh>
#  include <vaucanson/algorithms/evaluation.hh>
#  include <vaucanson/algorithms/projection.hh>
#  include <vaucanson/algorithms/realtime_to_fmp.hh>
#  include <vaucanson/algorithms/trim.hh>
#  include <vaucanson/algorithms/transpose.hh>
#  include <vaucanson/algorithms/krat_exp_expand.hh>
# endif // ! VCSN_WITHOUT_ALGORITHM_INCLUDES

namespace vcsn
{

  namespace VCSN_CONTEXT_NAMESPACE
  {

    template <class T>
    automaton_t new_automaton(const T& input_alphabet,
			      const T& output_alphabet);

    template <class InputIterator>
    automaton_t new_automaton(InputIterator input_alphabet_begin,
			      InputIterator input_alphabet_end,
			      InputIterator output_alphabet_begin,
			      InputIterator output_alphabet_end);

    template <typename TransStruct,
	      typename TransImpl,
	      typename ArgStruct,
	      typename ArgImpl>
    output_series_set_elt_t
    evaluation(const Element<TransStruct, TransImpl>& t,
	       const Element<ArgStruct, ArgImpl>& input);

  } // End of namespace VCSN_CONTEXT_NAMESPACE.

} // End of namespace vcsn.

# ifndef VCSN_USE_INTERFACE_ONLY
#  include <vaucanson/contexts/transducer_functions.thxx>
# endif // ! VCSN_USE_INTERFACE_ONLY
