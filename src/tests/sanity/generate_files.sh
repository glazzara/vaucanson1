#! /bin/sh

set -e

test "x$1" != "x"
cd "$1"

top_srcdir=../../..
build_aux_dir=$top_srcdir/build-aux
move_if_change=$build_aux_dir/move-if-change
test -f $move_if_change

# The file to generate.
out=check-programs.mk

# The corresponding tmp file.
tmp=$out.tmp

# Compute files to test.
(cd ../../../include && 
    find vaucanson -type f -name \*.hh) |
grep -vE 'old/|obsolete/|\.svn/|contextual_(automaton|transducer)_' > files.tmp

# Set check_PROGRAMS.
cat > $tmp << EOF
#
# DO NOT EDIT BY HAND - Generated by $0.
#

check_PROGRAMS= \\
EOF
awk '/xml/ { next }; { gsub(/[.\/]/, "_"); print "\t"$0"-test \\" }' \
  files.tmp | sed '$s/\(.*\) \\/\1/' >> $tmp

cat >> $tmp <<EOF
ProgsXml = \\
EOF

awk '/xml/ { gsub(/[.\/]/, "_"); print "\t"$0"-test \\" }' files.tmp | \
  sed '$s/\(.*\) \\/\1/' >> $tmp

cat >> $tmp <<EOF
check_PROGRAMS += \$(ProgsXml)
EOF

echo >> $tmp
echo "TESTS = \$(check_PROGRAMS)" >> $tmp

# Set test sources and CPPFLAGS.
awk '
  {
    target = $1
    gsub(/[.\/]/, "_", target)
    print target"_test_SOURCES = "target".cc"
  }
' files.tmp >> $tmp

# Update.
$move_if_change $tmp $out

# Build test sources.
for f in $(cat files.tmp)
do
    out=$(echo $f | sed 's/[.\/]/_/g').cc
    cat > $out.tmp <<EOF
//
// DO NOT EDIT BY HAND - Generated by $0.
//

#include <$f>
int main()
{
}
EOF
    $move_if_change $out.tmp $out
done

# Remove temporary file.
rm files.tmp

