#! /bin/sh

# Vaucanson, a generic library for finite state machines.
# Copyright (C) 2008 The Vaucanson Group.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# The complete GNU General Public Licence Notice can be found as the
# `COPYING' file in the root directory.
#
# The Vaucanson Group consists of people listed in the `AUTHORS' file.

. ./defs || exit 1

set -e

VCSN=vcsn-int-fmp-z

sed '/^#/d' <<EOF | $VCSN --alphabet1=10,11,12 --alphabet2=20,21,22 define-automaton x.xml
# Add states
1
# Add two states
2
# Set a state to be initial.
5
# Which state
0
# Weight?
2
# Set a state to be final.
7
# Which state
1
# Weight
3
# Add transition
3
# From and to
0
1
# Label (word,word,weight)
10#11
22
5
# Add transition
3
# From and to
1
0
# Label
11
22#20
1
# Exit.
10
EOF



# The evaluation of a word on FMP transducers internally uses
# aut-to-exp which may produce different results depending on the
# order used to remove the states of the automaton.  The following
# test are simple enough so that the resulting ratexps should only
# differ by their parentheses.  We use "expand" to hide these
# discrepancies.

res=`$VCSN eval x.xml 10.11.11`
test "x$res" = xz

res=`$VCSN eval x.xml 10#11`
res=`vcsn-int-z expand --alphabet=22 "$res"`
test "x$res" = "x{30} 22"

res=`$VCSN eval x.xml 10#11.11#10.11`
res=`vcsn-int-z expand --alphabet=20,22 "$res"`
test "x$res" = "x{150} 22#22#20#22"

res=`$VCSN image x.xml | vcsn-int-z aut-to-exp -`
res=`vcsn-int-z expand --alphabet=22,20 "$res"`
test "x$res" = "x{30} (({5} 22#22#20)*.22)"
