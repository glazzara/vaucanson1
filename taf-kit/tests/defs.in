# -*- shell-script -*-
# @configure_input@
#
# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
# 2006, 2007, 2008 Free Software Foundation, Inc.
#
# This file is part of Vaucanson.
# This file was part of GNU Automake.
#
# GNU Automake is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# GNU Automake is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Automake; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.

# Be Bourne compatible.
# (Snippet copied from configure's initialization in Autoconf 2.57.)
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
  set -o posix
fi

me=`echo "$0" | sed -e 's,.*[\\/],,;s/\.test$//'`

# fatal MESSAGE...
fatal ()
{
  echo >&2 "$me: $@"
  exit 1
}


# Ensure we are running from the right directory.
test -f ./defs ||
   fatal "defs: not found in current directory"


# If srcdir is not set, then we are not running from `make check', be verbose.
if test -z "$srcdir"; then
   VERBOSE=x
   # compute $srcdir.
   srcdir=`echo "$0" | sed -e 's,/[^\\/]*$,,'`
   test $srcdir = $0 && srcdir=.
fi

# Always use an absolute srcdir.  Otherwise symlinks made in subdirs
# of the test dir just won't work.
case "$srcdir" in
 [\\/]* | ?:[\\/]*)
    ;;

 *)
    srcdir=`CDPATH=: && cd "$srcdir" && pwd`
    ;;
esac

# Ensure $srcdir and $top_srcdir are set correctly.
test -f $srcdir/defs.in ||
   fatal "$srcdir/defs.in not found, check \$srcdir"

top_srcdir=$(cd $srcdir/../.. && pwd)
test -f $top_srcdir/configure.ac ||
   fatal "$top_srcdir/configure.ac not found, check \$top_srcdir"


# See how redirections should work.  User can set VERBOSE to see all
# output.
# test -z "$VERBOSE" && {
#    exec 2> /dev/null
# }

# Make sure we override the user shell.
SHELL='@SHELL@'
export SHELL
# POSIX no longer requires 'egrep' and 'fgrep',
# but some hosts lack 'grep -E' and 'grep -F'.
EGREP='@EGREP@'
FGREP='@FGREP@'

# By default, use the tools that are present here.
PATH=$(pwd):$PATH
export PATH
echo "Path is $PATH" >&2

# Some shells forget to export modified environment variables.
# (See note about `export' in the Autoconf manual.)
export PATH
# User can override various tools used.
test -z "$PERL" && PERL='@PERL@'

if test -n "$required"
then
  for tool in $required
  do
    # Check that each required tool is present.
    case $tool in
      # Generic case: the tool must support --version.
      *)
	echo "$me: running $tool --version"
	( $tool --version ) || exit 77
	;;
    esac
  done
fi


# Check states and transitions coherence
check_coherence()
{
    input=$1
    states=$2
    initials=$3
    finals=$4
    transitions=$5

    for line in `echo $input`; do
	name=`echo $line | cut -d: -f1 -`
	value=`echo $line | cut -d: -f2 -`
	case $name in
	    "States")
		if [ $states -neq $value ]; then
		    echo "Wrong number of states"
		fi
		;;
	    "Transitions")
		if [ $states -neq $value ]; then
		    echo "Wrong number of transitions"
		fi
		;;
	    "Initial states")
		if [ $states -neq $value ]; then
		    echo "Wrong number of initial states"
		fi
		;;
	    "Final states")
		if [ $states -neq $value ]; then
		    echo "Wrong number of final states"
		fi
		;;
	    *)
		echo "error: unknown info attribute '$name'"
		;;
	esac
    done
}

check_coherence_xml()
{
    file=$1
    shift 1
    check_coherence `vcsn-b info $file` $*
}

fail1()
{
  exitcode=0
  "$@" || exitcode=$?
  test $exitcode = 1 || exit 1
}

fail255()
{
  exitcode=0
  "$@" || exitcode=$?
  test $exitcode = 255 || exit 1
}

## ---------- ##
## Automata.  ##
## ---------- ##

automata_dir=$top_srcdir/data/automata
automata_tests_dir=$top_srcdir/taf-kit/tests/automata
a1=$automata_dir/char-b/a1.xml
b1=$automata_dir/char-b/b1.xml
c1=$automata_dir/char-z/c1.xml
t1=$automata_dir/char-fmp-b/t1.xml
u1=$automata_dir/char-fmp-b/u1.xml
ambiguous1=$automata_tests_dir/char-b/ambiguous1.xml
ambiguous2=$automata_tests_dir/char-b/ambiguous2.xml
b_to_transpose=$automata_tests_dir/char-b/b_to_transpose.xml
b_transposed=$automata_tests_dir/char-b/b_transposed.xml
finalword=$automata_tests_dir/char-b/finalword.xml
initialseries=$automata_tests_dir/char-b/initialseries.xml
initialword=$automata_tests_dir/char-b/initialword.xml
non_ambiguous1=$automata_tests_dir/char-b/non_ambiguous1.xml
realtime_test=$automata_tests_dir/char-b/realtime_test.xml
void_b_automaton=$automata_tests_dir/char-b/void_b_automaton.xml
void_z_automaton=$automata_tests_dir/char-z/void_z_automaton.xml
standard_c1=$automata_tests_dir/char-z/standard_c1.xml
t1_compose_u1=$automata_tests_dir/char-fmp-b/t1_compose_u1.xml
t2=$automata_tests_dir/char-fmp-b/t2.xml
u2=$automata_tests_dir/char-fmp-b/u2.xml
t2_ucompose_u2=$automata_tests_dir/char-fmp-b/t2_u-compose_u2.xml
inverted_t1=$automata_tests_dir/char-fmp-b/inverted_t1.xml
int_b=$automata_tests_dir/int-b/int-b.xml
int_z=$automata_tests_dir/int-z/int-z.xml


## ---------- ##
## Test dir.  ##
## ---------- ##

testSubDir=$me.dir
chmod -R a+rwx $testSubDir > /dev/null 2>&1
rm -rf $testSubDir > /dev/null 2>&1
mkdir $testSubDir
cd $testSubDir



echo "=== Running test $0"

# Turn on shell traces when VERBOSE is set.
#if test -n "$VERBOSE"; then
  set -x
#else
#  :
#fi
echo "Working in $(pwd)" >&2
