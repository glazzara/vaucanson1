# -*- shell-script -*-
# @configure_input@
#
# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006
# Free Software Foundation, Inc.
#
# This file is part of Vaucanson.
# This file was part of GNU Automake.
#
# GNU Automake is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# GNU Automake is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Automake; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.

# Be Bourne compatible.
# (Snippet copied from configure's initialization in Autoconf 2.57.)
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
  set -o posix
fi

me=`echo "$0" | sed -e 's,.*[\\/],,;s/\.test$//'`

# fatal MESSAGE...
fatal ()
{
  echo >&2 "$me: $@"
  exit 1
}


# Ensure we are running from the right directory.
test -f ./defs ||
   fatal "defs: not found in current directory"


# If srcdir is not set, then we are not running from `make check', be verbose.
if test -z "$srcdir"; then
   VERBOSE=x
   # compute $srcdir.
   srcdir=`echo "$0" | sed -e 's,/[^\\/]*$,,'`
   test $srcdir = $0 && srcdir=.
fi

# Always use an absolute srcdir.  Otherwise symlinks made in subdirs
# of the test dir just won't work.
case "$srcdir" in
 [\\/]* | ?:[\\/]*)
    ;;

 *)
    srcdir=`CDPATH=: && cd "$srcdir" && pwd`
    ;;
esac

# Ensure $srcdir and $top_srcdir are set correctly.
test -f $srcdir/defs.in ||
   fatal "$srcdir/defs.in not found, check \$srcdir"

top_srcdir=$(cd $srcdir/../.. && pwd)
test -f $top_srcdir/configure.ac ||
   fatal "$top_srcdir/configure.ac not found, check \$top_srcdir"


# See how redirections should work.  User can set VERBOSE to see all
# output.
# test -z "$VERBOSE" && {
#    exec 2> /dev/null
# }

# Make sure we override the user shell.
SHELL='@SHELL@'
export SHELL
# POSIX no longer requires 'egrep' and 'fgrep',
# but some hosts lack 'grep -E' and 'grep -F'.
EGREP='@EGREP@'
FGREP='@FGREP@'

# By default, use the tools that are present here.
PATH=$(pwd):$PATH
export PATH
echo "Path is $PATH" >&2

# Some shells forget to export modified environment variables.
# (See note about `export' in the Autoconf manual.)
export PATH
# User can override various tools used.
test -z "$PERL" && PERL='@PERL@'

if test -n "$required"
then
  for tool in $required
  do
    # Check that each required tool is present.
    case $tool in
      # Generic case: the tool must support --version.
      *)
	echo "$me: running $tool --version"
	( $tool --version ) || exit 77
	;;
    esac
  done
fi


## ---------- ##
## Automata.  ##
## ---------- ##

automata_dir=$top_srcdir/data/automata
automata_tests_dir=$top_srcdir/taf-kit/tests
a1=$automata_dir/b/a1.xml
b1=$automata_dir/b/b1.xml
c1=$automata_dir/z/c1.xml
t1=$automata_dir/tdc/t1.xml
u1=$automata_dir/tdc/u1.xml
non_ambiguous1=$automata_tests_dir/non_ambiguous.xml
non_ambiguous2=$automata_tests_dir/non_ambiguous2.xml
ambiguous=$automata_tests_dir/ambiguous.xml
void_b_automaton=$automata_tests_dir/void_b_automaton.xml
void_z_automaton=$automata_tests_dir/void_z_automaton.xml
standard_c1=$automata_tests_dir/standard_c1.xml

## ---------- ##
## Test dir.  ##
## ---------- ##

test -d testSubDir ||
  mkdir testSubDir
testSubDir=testSubDir/$me
chmod -R a+rwx $testSubDir > /dev/null 2>&1
rm -rf $testSubDir > /dev/null 2>&1
mkdir $testSubDir
cd $testSubDir



echo "=== Running test $0"

# Turn on shell traces when VERBOSE is set.
#if test -n "$VERBOSE"; then
  set -x
#else
#  :
#fi
echo "Working in $(pwd)" >&2
